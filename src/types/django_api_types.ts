/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type APISchemas = {
  AuthTokenRequest?: AuthTokenRequest;
  AuthToken?: AuthToken;
  CartItem?: CartItem;
  CartItemRequest?: CartItemRequest;
  PatchedCartItemRequest?: PatchedCartItemRequest;
  CheckoutResponse?: CheckoutResponse;
  Category?: Category;
  CategoryRequest?: CategoryRequest;
  PatchedCategoryRequest?: PatchedCategoryRequest;
  MenuItem?: MenuItem;
  MenuItemRequest?: MenuItemRequest;
  PatchedMenuItemRequest?: PatchedMenuItemRequest;
  Order?: Order;
  TokenObtainPairRequest?: TokenObtainPairRequest;
  CookieTokenObtainPairResponse?: CookieTokenObtainPairResponse;
  TokenBlacklistRequest?: TokenBlacklistRequest;
  TokenRefreshRequest?: TokenRefreshRequest;
  CookieTokenRefreshResponse?: CookieTokenRefreshResponse;
  TokenCreateRequest?: TokenCreateRequest;
  TokenCreate?: TokenCreate;
  User?: User;
  UserCreateRequest?: UserCreateRequest;
  UserCreate?: UserCreate;
  UserRequest?: UserRequest;
  PatchedUserRequest?: PatchedUserRequest;
  ActivationRequest?: ActivationRequest;
  Activation?: Activation;
  SendEmailResetRequest?: SendEmailResetRequest;
  SendEmailReset?: SendEmailReset;
  PasswordResetConfirmRequest?: PasswordResetConfirmRequest;
  PasswordResetConfirm?: PasswordResetConfirm;
  UsernameResetConfirmRequest?: UsernameResetConfirmRequest;
  UsernameResetConfirm?: UsernameResetConfirm;
  SetPasswordRequest?: SetPasswordRequest;
  SetPassword?: SetPassword;
  SetUsernameRequest?: SetUsernameRequest;
  SetUsername?: SetUsername;
  Rating?: Rating;
  RatingRequest?: RatingRequest;
  [k: string]: unknown;
};
export type AuthTokenRequest = {
  username: string;
  password: string;
};
export type AuthToken = {
  token: string;
};
export type CartItem = {
  id: number;
  menuitem: number;
  quantity?: number;
};
export type CartItemRequest = {
  menuitem: number;
  quantity?: number;
};
export type PatchedCartItemRequest = {
  menuitem?: number;
  quantity?: number;
};
export type CheckoutResponse = {
  detail: string;
  order_id: number;
};
export type Category = {
  id: number;
  title: string;
  slug: string;
};
export type CategoryRequest = {
  title: string;
  slug: string;
};
export type PatchedCategoryRequest = {
  title?: string;
  slug?: string;
};
export type MenuItem = {
  id: number;
  title: string;
  price: string;
  inventory?: number | null;
  price_after_tax: string;
  category: {
    id: number;
    title: string;
    slug: string;
  };
  featured?: boolean;
};
export type MenuItemRequest = {
  title: string;
  price: string;
  inventory?: number | null;
  category_id: number;
  featured?: boolean;
};
export type PatchedMenuItemRequest = {
  title?: string;
  price?: string;
  inventory?: number | null;
  category_id?: number;
  featured?: boolean;
};
export type Order = {
  id: number;
  user: number;
  delivery_crew?: number | null;
  status?: boolean;
  total: string;
  date: string;
};
export type TokenObtainPairRequest = {
  username: string;
  password: string;
};
export type CookieTokenObtainPairResponse = {
  access: string;
};
export type TokenBlacklistRequest = {
  refresh: string;
};
export type TokenRefreshRequest = {
  refresh: string;
};
export type CookieTokenRefreshResponse = {
  access: string;
};
export type TokenCreateRequest = {
  password?: string;
  username?: string;
};
export type TokenCreate = {
  password?: string;
  username?: string;
};
export type User = {
  email?: string;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username: string;
};
export type UserCreateRequest = {
  email?: string;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username: string;
  password: string;
};
export type UserCreate = {
  email?: string;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username: string;
};
export type UserRequest = {
  email?: string;
};
export type PatchedUserRequest = {
  email?: string;
};
export type ActivationRequest = {
  uid: string;
  token: string;
};
export type Activation = {
  uid: string;
  token: string;
};
export type SendEmailResetRequest = {
  email: string;
};
export type SendEmailReset = {
  email: string;
};
export type PasswordResetConfirmRequest = {
  uid: string;
  token: string;
  new_password: string;
};
export type PasswordResetConfirm = {
  uid: string;
  token: string;
  new_password: string;
};
export type UsernameResetConfirmRequest = {
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  new_username: string;
};
export type UsernameResetConfirm = {
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  new_username: string;
};
export type SetPasswordRequest = {
  new_password: string;
  current_password: string;
};
export type SetPassword = {
  new_password: string;
  current_password: string;
};
export type SetUsernameRequest = {
  current_password: string;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  new_username: string;
};
export type SetUsername = {
  current_password: string;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  new_username: string;
};
export type Rating = {
  user?: number;
  menuitem_id: number;
  rating: number;
};
export type RatingRequest = {
  user?: number;
  menuitem_id: number;
  rating: number;
};
